AWSTemplateFormatVersion: 2010-09-09
Mappings:
  RegionMap:
    us-east-1:
      AMI: "ami-08788675"
    us-east-2:
      AMI: ""
    us-west-1:
      AMI: ""
    us-west-2:
      AMI: ""
Parameters:
  AWSRegion:
    Type: String
    AllowedValues: [us-east-1, us-east-2, us-west-1, us-west-2]
    Default: "us-east-1"
  EnvType:
    Type: String
    AllowedValues: [prod, dev, test]
    Default: "prod"
    ConstraintDescription: must specify prod, dev or test.
  GithubUN:
    Type : String
    Default: 'SJGC'
    Description: Username for GitHub 
  DevopsMgmtRepo:
    Type: String
    Default: 'github.cms.gov/SJGC/devops-mgmt.git'
    Description: Repo where the devops mgmt framework is stored
  JenkinsAZ:
    Type: String
    Default: "us-east-1a"
    AllowedValues: [us-east-1a, us-east-1b, us-east-1c, us-east-1d, us-east-1f, us-east-2a, us-east-2b, us-east-2c]
  JenkinsSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-7ab20326
  JenkinsSG:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Default: sg-b3bc13f9
    Description: default to project's automated vpn-private group
  JenkinsKey:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: daas-jenkins-master-key
  JenkinsKmsId:
    Type: String
    Default: 0a6d2e34-a354-4d66-941e-ed046441662e
    Description: Encryption key used to secure the parameter store
  JenkinsEbsSize:
    Type: Number
    MinValue: 1
    MaxValue: 200
    Default: 2 
  NexusAZ:
    Type: String
    Default: "us-east-1a"
    AllowedValues: [us-east-1a, us-east-1b, us-east-1c, us-east-1d, us-east-1f, us-east-2a, us-east-2b, us-east-2c]
  NexusSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-7ab20326
  NexusSG:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Default: sg-28b51a62  
  NexusKey:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: daas-jenkins-deploy-key
  SonarAZ:
    Type: String
    Default: "us-east-1a"
    AllowedValues: [us-east-1a, us-east-1b, us-east-1c, us-east-1d, us-east-1f, us-east-2a, us-east-2b, us-east-2c]
  SonarSubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-7ab20326
  SonarSG:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Default: sg-28b51a62
  SonarKey:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: daas-jenkins-deploy-key

Conditions: 
  CreateProdResources: !Equals [ !Ref EnvType, prod ]
  CreateDevResources: !Equals [ !Ref EnvType, dev ]

Resources:
  JenkinsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: JenkinsParamStore
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: 'arn:aws:s3:::devops-mgmt/*'
          - Action:
              - 'ssm:DescribeParameters'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ssm:GetParameters'
            Effect: Allow
            Resource: 
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/JenkinsDeployKey"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/GithubToken"
          - Action:
              - 'kms:Decrypt'
            Effect: Allow
            Resource: 
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${JenkinsKmsId}"
      Roles:
        - !Ref JenkinsRole
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref JenkinsRole
  JenkinsEBS:
    Type: "AWS::EC2::Volume"
    Properties:
      AvailabilityZone: !Ref JenkinsAZ
      Size: !Ref JenkinsEbsSize
      Tags:
        - Key: Name
          Value: DaasJenkinsEBS
  Jenkins:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: !Ref JenkinsAZ
      ImageId: !FindInMap [RegionMap, !Ref "AWSRegion", AMI]
      InstanceType: !If [CreateProdResources, m5.large, !If [CreateDevResources, t2.small, t2.medium ]]
      KeyName: !Ref JenkinsKey
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref JenkinsSG
      SubnetId: !Ref JenkinsSubnetId
      Tags:
        - Key: Name
          Value: devops-mgmt-jenkins
      UserData: 
          Fn::Base64: 
            !Sub 
              - |
                #!/bin/bash -ex
                exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
                /usr/local/aws/bin/pip install --upgrade awscli
                yum install git -y
                aws ssm get-parameters --names JenkinsDeployKey --with-decryption --region us-east-1 --query "Parameters[*].Value" --output text | sed -E 's/(-+(BEGIN|END) RSA PRIVATE KEY-+) *| +/\1\n/g' > /home/ec2-user/.ssh/id_rsa 2>&1
                aws ssm get-parameters --names GithubToken --with-decryption --region us-east-1 --query "Parameters[*].Value" --output text > /home/ec2-user/github-token 2>&1
                export TOKEN=`cat /home/ec2-user/github-token`
                git clone https://${GithubUN}:$TOKEN@${DevopsMgmtRepo} /home/ec2-user/devops-mgmt
                echo ${Nexus_IP} > /home/ec2-user/nexus_ip
                echo ${Sonar_IP} > /home/ec2-user/sonar_ip
                /bin/sh /home/ec2-user/devops-mgmt/setup_scripts/bootstrap.sh
              - Nexus_IP: !GetAtt Nexus.PrivateIp 
                Sonar_IP: !GetAtt Sonar.PrivateIp 
    DependsOn: 
      - Nexus 
      - Sonar

  JenkinsMountPoint:
    Type: "AWS::EC2::VolumeAttachment"
    Properties:
      InstanceId: !Ref Jenkins
      VolumeId: !Ref JenkinsEBS
      Device: /dev/sdh
  Nexus:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref NexusAZ
      ImageId: !FindInMap [RegionMap, !Ref "AWSRegion", AMI]
      InstanceType: !If [CreateProdResources, m5.large, !If [CreateDevResources, t2.small, t2.medium ]]
      KeyName: !Ref NexusKey
      SecurityGroupIds:
        - !Ref NexusSG
      SubnetId: !Ref NexusSubnetId
      Tags:
        - Key: Name
          Value: devops-mgmt-nexus
  Sonar:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref SonarAZ
      ImageId: !FindInMap [RegionMap, !Ref "AWSRegion", AMI]
      InstanceType: !If [CreateProdResources, m5.large, !If [CreateDevResources, t2.small, t2.medium ]]
      KeyName: !Ref SonarKey
      SecurityGroupIds:
        - !Ref SonarSG
      SubnetId: !Ref SonarSubnetId
      Tags:
        - Key: Name
          Value: devops-mgmt-sonar